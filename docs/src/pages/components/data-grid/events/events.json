[
  {
    "name": "resize",
    "description": "Fired when the grid is resized. Called with a GridResizeParams object."
  },
  {
    "name": "focusout",
    "description": "Fired when a <code>focusout</code> event happens in the grid."
  },
  {
    "name": "keydown",
    "description": "Fired when a <code>keydown</code> event happens in the grid."
  },
  { "name": "keyup", "description": "Fired when a <code>keyup</code> event happens in the grid." },
  { "name": "componentError", "description": "Fired when an exception is thrown in the grid." },
  { "name": "unmount", "description": "Fired when the grid is unmounted." },
  {
    "name": "cellModeChange",
    "description": "Fired when the mode of a cell changes. Called with a GridCellModeChangeParams object."
  },
  {
    "name": "cellClick",
    "description": "Fired when a cell is clicked. Called with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellDoubleClick",
    "description": "Fired when a cell is double-clicked. Called with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellMouseDown",
    "description": "Fired when a <code>mousedown</code> event happens in a cell. Called with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellOver",
    "description": "Fired when a <code>mouseover</code> event happens in a cell. Called with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellOut",
    "description": "Fired when a <code>mouseout</code> event happens in a cell. Called with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellEnter",
    "description": "Fired when a <code>mouseenter</code> event happens in a cell. Called with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellLeave",
    "description": "Fired when a <code>mouseleave</code> event happens in a cell. Called with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellKeydown",
    "description": "Fired when a <code>keydown</code> event happens in a cell. Called with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellBlur",
    "description": "Fired when a cell loses focus. Called with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellFocus",
    "description": "Fired when a cell gains focus. Called with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellDragStart",
    "description": "Fired when the user starts dragging a cell. It&#39;s mapped to the <code>dragstart</code> DOM event.\nCalled with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellDragEnter",
    "description": "Fired when the dragged cell enters a valid drop target. It&#39;s mapped to the <code>dragend</code> DOM event.\nCalled with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellDragOver",
    "description": "Fired while an element or text selection is dragged over the cell.\nIt&#39;s mapped to the <code>dragover</code> DOM event.\nCalled with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellDragEnd",
    "description": "Fired when the dragging of a cell ends. Called with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellEditPropsChange",
    "description": "Fired when the props of the edit input changes. Called with a GridEditCellPropsParams object."
  },
  {
    "name": "cellEditPropsChangeCommitted",
    "description": "Fired when the props of the edit input are committed. Called with a GridEditCellPropsParams object."
  },
  {
    "name": "cellValueChange",
    "description": "Fired when the value of a cell changes. Called with a GridEditCellValueParams object."
  },
  {
    "name": "cellEditEnter",
    "description": "Fired when the cell turns to edit mode. Called with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellEditExit",
    "description": "Fired when the cell turns back to view mode. Called with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "cellNavigationKeyDown",
    "description": "Fired when a <a href=\"/components/data-grid/accessibility#keyboard-navigation\">navigation key</a> is pressed in a cell.\nCalled with a <a href=\"/api/data-grid/grid-cell-params\">GridCellParams</a> object."
  },
  {
    "name": "rowClick",
    "description": "Fired when a row is clicked. Called with a <a href=\"/api/data-grid/grid-row-params\">GridRowParams</a> object."
  },
  {
    "name": "rowDoubleClick",
    "description": "Fired when a row is double-clicked. Called with a <a href=\"/api/data-grid/grid-row-params\">GridRowParams</a> object."
  },
  {
    "name": "rowOver",
    "description": "Fired when a <code>mouseover</code> event happens in a row.  Called with a <a href=\"/api/data-grid/grid-row-params\">GridRowParams</a> object."
  },
  {
    "name": "rowOut",
    "description": "Fired when a <code>mouseout</code> event happens in a row.  Called with a <a href=\"/api/data-grid/grid-row-params\">GridRowParams</a> object."
  },
  {
    "name": "rowEnter",
    "description": "Fired when a <code>mouseenter</code> event happens in a row.  Called with a <a href=\"/api/data-grid/grid-row-params\">GridRowParams</a> object."
  },
  {
    "name": "rowLeave",
    "description": "Fired when a <code>mouseleave</code> event happens in a row.  Called with a <a href=\"/api/data-grid/grid-row-params\">GridRowParams</a> object."
  },
  {
    "name": "rowSelected",
    "description": "Fired when a row is selected or unselected. Called with a GridRowSelectedParams object."
  },
  {
    "name": "columnHeaderBlur",
    "description": "Fired when a column header loses focus. Called with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderFocus",
    "description": "Fired when a column header gains focus. Called with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderNavigationKeydown",
    "description": "Fired when a <a href=\"/components/data-grid/accessibility#keyboard-navigation\">navigation key</a> is pressed in a column header.\nCalled with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderKeydown",
    "description": "Fired when a key is pressed in a column header. It&#39;s mapped do the <code>keydown</code> DOM event.\nCalled with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderClick",
    "description": "Fired when a column header is clicked. Called with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderDoubleClick",
    "description": "Fired when a column header is double-clicked. Called with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderOver",
    "description": "Fired when a <code>mouseover</code> event happens in a column header. Called with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderOut",
    "description": "Fired when a <code>mouseout</code> event happens in a column header. Called with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderEnter",
    "description": "Fired when a <code>mouseenter</code> event happens in a column header. Called with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderLeave",
    "description": "Fired when a <code>mouseleave</code> event happens in a column header. Called with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderDragStart",
    "description": "Fired when the user starts dragging a column header. It&#39;s mapped to the <code>dragstart</code> DOM event.\nCalled with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderDragOver",
    "description": "Fired while an element or text selection is dragged over the column header.\nIt&#39;s mapped to the <code>dragover</code> DOM event.\nCalled with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderDragEnter",
    "description": "Fired when the dragged column header enters a valid drop target.\nIt&#39;s mapped to the <code>dragend</code> DOM event.\nCalled with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderDragEnd",
    "description": "Fired when the dragging of a column header ends. Called with a GridColumnHeaderParams object."
  },
  {
    "name": "selectionChange",
    "description": "Fired when the selection state of one or multiple rows changes.\nCalled with a GridSelectionModelChangeParams object."
  },
  {
    "name": "pageChange",
    "description": "Fired when the current page has changed. Called with a GridPageChangeParams object."
  },
  {
    "name": "pageSizeChange",
    "description": "Fired when the page size has changed. Called with a GridPageChangeParams object."
  },
  {
    "name": "rowsScroll",
    "description": "Fired during the scroll of the grid viewport. Called with a GridScrollParams object."
  },
  {
    "name": "rowsScrollEnd",
    "description": "Fired when scrolling to the bottom of the grid viewport. Called with a GridRowScrollEndParams object."
  },
  {
    "name": "columnSeparatorMouseDown",
    "description": "Fired when a <code>mousedown</code> DOM event happens in the column header separator.\nCalled with a GridColumnHeaderParams object."
  },
  {
    "name": "columnResize",
    "description": "Fired during the resizing of a column. Called with a GridColumnResizeParams object."
  },
  {
    "name": "columnResizeCommited",
    "description": "Fired when a column is resized. Called with a GridColumnResizeParams object."
  },
  {
    "name": "columnResizeStart",
    "description": "Fired when the user starts resizing a column. Called with an object <code>{ field: string }</code>."
  },
  {
    "name": "columnResizeStop",
    "description": "Fired when the user starts resizing a column. Called with an object <code>{ field: string }</code>."
  },
  { "name": "columnOrderChange", "description": "Fired when the user ends resizing a column." },
  { "name": "rowsUpdated", "description": "Fired when the rows are updated." },
  { "name": "rowsSet", "description": "Fired when the rows are updated." },
  { "name": "rowsCleared", "description": "Fired when the grid is emptied." },
  {
    "name": "columnsUpdated",
    "description": "Fired when the columns state is changed.\nCalled with an array of strings correspoding to the field names."
  },
  {
    "name": "sortModelChange",
    "description": "Fired after the sort model is changed but before applying the new model.\nCalled with a GridSortModelParams object."
  },
  {
    "name": "filterModelChange",
    "description": "Fired after the filter model is changed and the new model is applied.\nCalled with a GridFilterModelParams object."
  },
  {
    "name": "stateChange",
    "description": "Fired when the state of the grid is updated. Called with a GridStateChangeParams object."
  }
]
