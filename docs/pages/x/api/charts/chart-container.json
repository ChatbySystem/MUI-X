{
  "props": {
    "height": { "type": { "name": "number" }, "required": true },
    "series": {
      "type": {
        "name": "arrayOf",
        "description": "Array&lt;{ color?: string, data?: Array&lt;number&gt;, dataKey?: string, highlightScope?: { faded?: 'global'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;'series', highlighted?: 'item'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;'series' }, id?: string, label?: string, layout?: 'horizontal'<br>&#124;&nbsp;'vertical', stack?: string, stackOffset?: 'diverging'<br>&#124;&nbsp;'expand'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;'silhouette'<br>&#124;&nbsp;'wiggle', stackOrder?: 'appearance'<br>&#124;&nbsp;'ascending'<br>&#124;&nbsp;'descending'<br>&#124;&nbsp;'insideOut'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;'reverse', type: 'bar', valueFormatter?: func, xAxisKey?: string, yAxisKey?: string }<br>&#124;&nbsp;{ area?: bool, color?: string, connectNulls?: bool, curve?: 'catmullRom'<br>&#124;&nbsp;'linear'<br>&#124;&nbsp;'monotoneX'<br>&#124;&nbsp;'monotoneY'<br>&#124;&nbsp;'natural'<br>&#124;&nbsp;'step'<br>&#124;&nbsp;'stepAfter'<br>&#124;&nbsp;'stepBefore', data?: Array&lt;number&gt;, dataKey?: string, disableHighlight?: bool, highlightScope?: { faded?: 'global'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;'series', highlighted?: 'item'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;'series' }, id?: string, label?: string, showMark?: func<br>&#124;&nbsp;bool, stack?: string, stackOffset?: 'diverging'<br>&#124;&nbsp;'expand'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;'silhouette'<br>&#124;&nbsp;'wiggle', stackOrder?: 'appearance'<br>&#124;&nbsp;'ascending'<br>&#124;&nbsp;'descending'<br>&#124;&nbsp;'insideOut'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;'reverse', type: 'line', valueFormatter?: func, xAxisKey?: string, yAxisKey?: string }<br>&#124;&nbsp;{ color?: string, data: Array&lt;{ id: number<br>&#124;&nbsp;string, x: number, y: number }&gt;, disableHover?: bool, highlightScope?: { faded?: 'global'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;'series', highlighted?: 'item'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;'series' }, id?: string, label?: string, markerSize?: number, type: 'scatter', valueFormatter?: func, xAxisKey?: string, yAxisKey?: string }<br>&#124;&nbsp;{ arcLabel?: 'formattedValue'<br>&#124;&nbsp;'label'<br>&#124;&nbsp;'value'<br>&#124;&nbsp;func, arcLabelMinAngle?: number, arcLabelRadius?: number<br>&#124;&nbsp;string, color?: string, cornerRadius?: number, cx?: number<br>&#124;&nbsp;string, cy?: number<br>&#124;&nbsp;string, data: Array&lt;{ color?: string, id?: number<br>&#124;&nbsp;string, label?: string, value: number }&gt;, endAngle?: number, faded?: { additionalRadius?: number, arcLabelRadius?: number, color?: string, cornerRadius?: number, innerRadius?: number, outerRadius?: number, paddingAngle?: number }, highlighted?: { additionalRadius?: number, arcLabelRadius?: number, color?: string, cornerRadius?: number, innerRadius?: number, outerRadius?: number, paddingAngle?: number }, highlightScope?: { faded?: 'global'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;'series', highlighted?: 'item'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;'series' }, id?: string, innerRadius?: number<br>&#124;&nbsp;string, outerRadius?: number<br>&#124;&nbsp;string, paddingAngle?: number, sortingValues?: 'asc'<br>&#124;&nbsp;'desc'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;func, startAngle?: number, type: 'pie', valueFormatter?: func }&gt;"
      },
      "required": true
    },
    "width": { "type": { "name": "number" }, "required": true },
    "colors": {
      "type": { "name": "union", "description": "Array&lt;string&gt;<br>&#124;&nbsp;func" },
      "default": "blueberryTwilightPalette"
    },
    "dataset": { "type": { "name": "arrayOf", "description": "Array&lt;object&gt;" } },
    "disableAxisListener": { "type": { "name": "bool" }, "default": "false" },
    "margin": {
      "type": {
        "name": "shape",
        "description": "{ bottom?: number, left?: number, right?: number, top?: number }"
      },
      "default": "object Depends on the charts type."
    },
    "xAxis": {
      "type": {
        "name": "arrayOf",
        "description": "Array&lt;{ axisId?: string, classes?: object, data?: array, dataKey?: string, disableLine?: bool, disableTicks?: bool, fill?: string, hideTooltip?: bool, id?: string, label?: string, labelFontSize?: number, labelStyle?: object, max?: Date<br>&#124;&nbsp;number, min?: Date<br>&#124;&nbsp;number, position?: 'bottom'<br>&#124;&nbsp;'left'<br>&#124;&nbsp;'right'<br>&#124;&nbsp;'top', scaleType?: 'band'<br>&#124;&nbsp;'linear'<br>&#124;&nbsp;'log'<br>&#124;&nbsp;'point'<br>&#124;&nbsp;'pow'<br>&#124;&nbsp;'sqrt'<br>&#124;&nbsp;'time'<br>&#124;&nbsp;'utc', slotProps?: object, slots?: object, stroke?: string, tickFontSize?: number, tickInterval?: 'auto'<br>&#124;&nbsp;array<br>&#124;&nbsp;func, tickLabelInterval?: 'auto'<br>&#124;&nbsp;func, tickLabelStyle?: object, tickMaxStep?: number, tickMinStep?: number, tickNumber?: number, tickSize?: number, valueFormatter?: func }&gt;"
      }
    },
    "yAxis": {
      "type": {
        "name": "arrayOf",
        "description": "Array&lt;{ axisId?: string, classes?: object, data?: array, dataKey?: string, disableLine?: bool, disableTicks?: bool, fill?: string, hideTooltip?: bool, id?: string, label?: string, labelFontSize?: number, labelStyle?: object, max?: Date<br>&#124;&nbsp;number, min?: Date<br>&#124;&nbsp;number, position?: 'bottom'<br>&#124;&nbsp;'left'<br>&#124;&nbsp;'right'<br>&#124;&nbsp;'top', scaleType?: 'band'<br>&#124;&nbsp;'linear'<br>&#124;&nbsp;'log'<br>&#124;&nbsp;'point'<br>&#124;&nbsp;'pow'<br>&#124;&nbsp;'sqrt'<br>&#124;&nbsp;'time'<br>&#124;&nbsp;'utc', slotProps?: object, slots?: object, stroke?: string, tickFontSize?: number, tickInterval?: 'auto'<br>&#124;&nbsp;array<br>&#124;&nbsp;func, tickLabelInterval?: 'auto'<br>&#124;&nbsp;func, tickLabelStyle?: object, tickMaxStep?: number, tickMinStep?: number, tickNumber?: number, tickSize?: number, valueFormatter?: func }&gt;"
      }
    }
  },
  "name": "ChartContainer",
  "imports": [
    "import { ChartContainer } from '@mui/x-charts/ChartContainer';",
    "import { ChartContainer } from '@mui/x-charts';"
  ],
  "classes": [],
  "muiName": "MuiChartContainer",
  "filename": "/packages/x-charts/src/ChartContainer/ChartContainer.tsx",
  "inheritance": null,
  "demos": "<ul><li><a href=\"/x/react-charts/composition/\">Chart composition</a></li></ul>",
  "cssComponent": false
}
