{
  "props": {
    "ampm": {
      "type": { "name": "bool" },
      "default": "`utils.is12HourCycleInCurrentLocale()`",
      "additionalPropsInfo": {}
    },
    "ampmInClock": {
      "type": { "name": "bool" },
      "default": "true on desktop, false on mobile",
      "additionalPropsInfo": {}
    },
    "autoFocus": { "type": { "name": "bool" }, "additionalPropsInfo": {} },
    "className": { "type": { "name": "string" }, "additionalPropsInfo": {} },
    "components": {
      "type": { "name": "object" },
      "default": "{}",
      "deprecated": true,
      "deprecationInfo": "Please use <code>slots</code>.",
      "additionalPropsInfo": {}
    },
    "componentsProps": {
      "type": { "name": "object" },
      "default": "{}",
      "deprecated": true,
      "deprecationInfo": "Please use <code>slotProps</code>.",
      "additionalPropsInfo": {}
    },
    "defaultValue": { "type": { "name": "any" }, "additionalPropsInfo": {} },
    "disabled": { "type": { "name": "bool" }, "additionalPropsInfo": {} },
    "disableFuture": { "type": { "name": "bool" }, "additionalPropsInfo": {} },
    "disableIgnoringDatePartForTimeValidation": {
      "type": { "name": "bool" },
      "additionalPropsInfo": {}
    },
    "disablePast": { "type": { "name": "bool" }, "additionalPropsInfo": {} },
    "displayStaticWrapperAs": {
      "type": { "name": "enum", "description": "'desktop'<br>&#124;&nbsp;'mobile'" },
      "default": "\"mobile\"",
      "additionalPropsInfo": {}
    },
    "localeText": { "type": { "name": "object" }, "additionalPropsInfo": {} },
    "maxTime": { "type": { "name": "any" }, "additionalPropsInfo": {} },
    "minTime": { "type": { "name": "any" }, "additionalPropsInfo": {} },
    "minutesStep": { "type": { "name": "number" }, "default": "1", "additionalPropsInfo": {} },
    "onAccept": {
      "type": { "name": "func" },
      "signature": { "type": "function(value: TValue) => void", "describedArgs": ["value"] },
      "additionalPropsInfo": {}
    },
    "onChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(value: TValue, context: FieldChangeHandlerContext<TError>) => void",
        "describedArgs": ["value", "context"]
      },
      "additionalPropsInfo": {}
    },
    "onClose": {
      "type": { "name": "func" },
      "deprecated": true,
      "deprecationInfo": "Please avoid using as it will be removed in next major version.",
      "additionalPropsInfo": {}
    },
    "onError": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(error: TError, value: TValue) => void",
        "describedArgs": ["error", "value"]
      },
      "additionalPropsInfo": {}
    },
    "onViewChange": {
      "type": { "name": "func" },
      "signature": { "type": "function(view: TView) => void", "describedArgs": ["view"] },
      "additionalPropsInfo": {}
    },
    "openTo": {
      "type": {
        "name": "enum",
        "description": "'hours'<br>&#124;&nbsp;'minutes'<br>&#124;&nbsp;'seconds'"
      },
      "additionalPropsInfo": {}
    },
    "orientation": {
      "type": { "name": "enum", "description": "'landscape'<br>&#124;&nbsp;'portrait'" },
      "additionalPropsInfo": {}
    },
    "shouldDisableClock": {
      "type": { "name": "func" },
      "deprecated": true,
      "deprecationInfo": "Consider using <code>shouldDisableTime</code>.",
      "signature": {
        "type": "function(clockValue: number, view: TimeView) => boolean",
        "describedArgs": ["clockValue", "view"],
        "returned": "boolean"
      },
      "additionalPropsInfo": {}
    },
    "shouldDisableTime": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(value: TDate, view: TimeView) => boolean",
        "describedArgs": ["value", "view"],
        "returned": "boolean"
      },
      "additionalPropsInfo": {}
    },
    "slotProps": { "type": { "name": "object" }, "default": "{}", "additionalPropsInfo": {} },
    "slots": { "type": { "name": "object" }, "default": "{}", "additionalPropsInfo": {} },
    "sx": {
      "type": {
        "name": "union",
        "description": "Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"
      },
      "additionalPropsInfo": { "sx": true }
    },
    "timezone": {
      "type": { "name": "string" },
      "default": "The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.",
      "additionalPropsInfo": {}
    },
    "value": { "type": { "name": "any" }, "additionalPropsInfo": {} },
    "view": {
      "type": {
        "name": "enum",
        "description": "'hours'<br>&#124;&nbsp;'minutes'<br>&#124;&nbsp;'seconds'"
      },
      "additionalPropsInfo": {}
    },
    "viewRenderers": {
      "type": {
        "name": "shape",
        "description": "{ hours?: func, minutes?: func, seconds?: func }"
      },
      "additionalPropsInfo": {}
    },
    "views": {
      "type": {
        "name": "arrayOf",
        "description": "Array&lt;'hours'<br>&#124;&nbsp;'minutes'<br>&#124;&nbsp;'seconds'&gt;"
      },
      "additionalPropsInfo": {}
    }
  },
  "slots": {
    "actionBar": { "default": "PickersActionBar", "type": { "name": "elementType" } },
    "layout": { "type": { "name": "elementType" } },
    "leftArrowIcon": { "default": "ArrowLeft", "type": { "name": "elementType" } },
    "nextIconButton": { "default": "IconButton", "type": { "name": "elementType" } },
    "previousIconButton": { "default": "IconButton", "type": { "name": "elementType" } },
    "rightArrowIcon": { "default": "ArrowRight", "type": { "name": "elementType" } },
    "shortcuts": { "default": "PickersShortcuts", "type": { "name": "elementType" } },
    "toolbar": { "default": "TimePickerToolbar", "type": { "name": "elementType" } }
  },
  "name": "StaticTimePicker",
  "styles": { "classes": [], "globalClasses": {}, "name": "MuiStaticTimePicker" },
  "spread": false,
  "forwardsRefTo": "undefined",
  "filename": "/packages/x-date-pickers/src/StaticTimePicker/StaticTimePicker.tsx",
  "inheritance": null,
  "demos": "<ul><li><a href=\"/x/react-date-pickers/time-picker/\">Time Picker</a></li>\n<li><a href=\"/x/react-date-pickers/validation/\">Validation</a></li></ul>",
  "packages": [
    { "packageName": "@mui/x-date-pickers-pro", "componentName": "StaticTimePicker" },
    { "packageName": "@mui/x-date-pickers", "componentName": "StaticTimePicker" }
  ]
}
