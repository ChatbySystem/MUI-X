{
  "componentDescription": "",
  "propDescriptions": {
    "components": "Overrideable components.",
    "componentsProps": "The props used for each component slot.",
    "defaultValue": "The default value. Use when the component is not controlled.",
    "disableFuture": "If <code>true</code> disable values before the current time",
    "disablePast": "If <code>true</code> disable values after the current time.",
    "maxDate": "Maximal selectable date. @DateIOType",
    "minDate": "Minimal selectable date. @DateIOType",
    "onSelectedSectionsChange": "Callback fired when the selected sections change.<br><br><strong>Signature:</strong><br><code>function(newValue: FieldSelectedSections) =&gt; void</code><br><em>newValue:</em> The new selected sections.",
    "readOnly": "It prevents the user from changing the value of the field (not from interacting with the field).",
    "selectedSections": "The currently selected sections. This prop accept four formats: 1. If a number is provided, the section at this index will be selected. 2. If an object with a <code>startIndex</code> and <code>endIndex</code> properties are provided, the sections between those two indexes will be selected. 3. If a string of type <code>MuiDateSectionName</code> is provided, the first section with that name will be selected. 4. If <code>null</code> is provided, no section will be selected If not provided, the selected sections will be handled internally.",
    "shouldDisableDate": "Disable specific date. @DateIOType<br><br><strong>Signature:</strong><br><code>function(day: TDate, position: string) =&gt; boolean</code><br><em>day:</em> The date to test.<br><em>position:</em> The date to test, &#39;start&#39; or &#39;end&#39;.<br> <em>returns</em> (boolean): Returns <code>true</code> if the date should be disabled."
  },
  "classDescriptions": {},
  "slotDescriptions": {
    "Root": "Element rendered at the root.",
    "Input": "Input rendered for the start or end date.",
    "Separator": "Element rendered between the two inputs."
  }
}
