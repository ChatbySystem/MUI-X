import * as React from 'react';
import { GridColDef } from '../../../models/gridColDef';
import { GridApiPro } from '../../../models/gridApiPro';

export const wrapColumnWithAggregation = ({
  colDef,
  apiRef,
}: {
  colDef: GridColDef;
  apiRef: React.MutableRefObject<GridApiPro>;
}) => {
  const { valueGetter, aggregationFunction } = colDef;

  if (!aggregationFunction) {
    return;
  }

  colDef.valueGetter = (params) => {
    if (!params.rowNode.isAutoGenerated) {
      if (valueGetter) {
        return valueGetter(params);
      }

      return params.row[params.field];
    }

    return aggregationFunction({
      values: (params.rowNode.children ?? []).map((id) =>
        apiRef.current.getCellValue(id, params.field),
      ),
    });
  };
};
